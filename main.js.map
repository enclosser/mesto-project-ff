{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project/./src/components/modal.js","webpack://mesto-project/./src/components/api.js","webpack://mesto-project/./src/components/card.js","webpack://mesto-project/./src/components/validation.js","webpack://mesto-project/./src/index.js"],"sourcesContent":["export function openModal(popup) {\n  popup.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", pressEscapeClose);\n  popup.addEventListener(\"mousedown\", clickOutsideClose);\n}\n\nexport function closeModal(popup) {\n  popup.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", pressEscapeClose);\n  popup.removeEventListener(\"mousedown\", clickOutsideClose);\n}\n\nfunction clickOutsideClose(evt) {\n  if (evt.target === evt.currentTarget || !evt.target.closest(\".popup__content\")) {\n    closeModal(evt.currentTarget);\n  }\n}\n\nfunction pressEscapeClose(evt) {\n  if (evt.key === \"Escape\") {\n    const selectedPopup = document.querySelector(\".popup_is-opened\");\n    if (selectedPopup) {\n      closeModal(selectedPopup);\n    }\n  }\n}\n\n","const config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-21\",\n  headers: {\n    authorization: \"ba726ca4-babe-4c60-b803-4ec06cee7921\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nfunction checkResponse(res) {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n}\n\nfunction request(endpoint, options) {\n  return fetch(`${config.baseUrl}${endpoint}`, {\n    headers: config.headers,\n    ...options,\n  }).then(checkResponse);\n}\n\n// Функции для выполнения запросов к API\n\nexport const getUserInfo = () => \n  request(\"/users/me\", { method: \"GET\" });\n\nexport const getCards = () => \n  request(\"/cards\", { method: \"GET\" });\n\nexport const updateUserServerInfo = (data) =>\n  request(\"/users/me\", {\n    method: \"PATCH\",\n    body: JSON.stringify({\n      name: data.name,\n      about: data.job,\n    }),\n  });\n\nexport const createNewPost = (data) =>\n  request(\"/cards\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      link: data.dataCard.link,\n      name: data.dataCard.name,\n    }),\n  });\n\nexport const deleteCard = (cardId) =>\n  request(`/cards/${cardId}`, { method: \"DELETE\" });\n\nexport const addLike = (cardId) =>\n  request(`/cards/likes/${cardId}`, { method: \"PUT\" });\n\nexport const removeLike = (cardId) =>\n  request(`/cards/likes/${cardId}`, { method: \"DELETE\" });\n\nexport const changeAvatar = (linkImg) =>\n  request(\"/users/me/avatar\", {\n    method: \"PATCH\",\n    body: JSON.stringify({ avatar: linkImg }),\n  });\n","import { openModal, closeModal } from \"./modal.js\";\nimport { deleteCard, addLike, removeLike } from \"./api.js\";\n\nexport const cardTemplate = document.querySelector(\"#card-template\").content;\nconst popupDelete = document.querySelector(\".delete__popup\");\nconst buttonPopupDelete = popupDelete.querySelector(\".popup__button\");\n\nexport function launchDeleteCard(event, cardId) {\n  const selectedCard = event.target.closest(\".card\");\n  openModal(popupDelete);\n  \n  const handleDelete = () => {\n    buttonPopupDelete.textContent = \"Удаление...\";\n    deleteCard(cardId)\n      .then(() => {\n        selectedCard.remove();\n        closeModal(popupDelete);\n      })\n      .catch((err) => console.error(err))\n      .finally(() => {\n        buttonPopupDelete.textContent = \"Да\";\n        buttonPopupDelete.removeEventListener(\"click\", handleDelete); // Удаляем слушатель события после завершения\n      });\n  };\n  \n  buttonPopupDelete.addEventListener(\"click\", handleDelete, { once: true });\n}\n\nexport function likeCard(event, cardId, likeCounter) {\n  const likeButton = event.target;\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\n  \n  const toggleLike = isLiked ? removeLike : addLike;\n\n  toggleLike(cardId)\n    .then((res) => {\n      likeCounter.textContent = res.likes.length;\n      likeButton.classList.toggle(\"card__like-button_is-active\");\n    })\n    .catch((err) => console.error(err));\n}\n\nexport function makeCard(data, handlerOpenPopupImage) {\n  const { informationCard: cardData, informationMe: userInfo } = data;\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\n  const buttonLike = cardElement.querySelector(\".card__like-button\");\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const likeCounter = cardElement.querySelector(\".like__counter\");\n  const buttonRemove = cardElement.querySelector(\".card__delete-button\");\n\n  // Заполнение карточки данными\n  likeCounter.textContent = cardData.likes.length;\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  cardElement.querySelector(\".card__title\").textContent = cardData.name;\n\n  // Обработка удаления карточки\n  if (cardData.owner._id === userInfo._id) {\n    buttonRemove.addEventListener(\"click\", (evt) => launchDeleteCard(evt, cardData._id));\n  } else {\n    buttonRemove.remove();\n  }\n\n  // Обработка лайков\n  if (cardData.likes.some((like) => like._id === userInfo._id)) {\n    buttonLike.classList.add(\"card__like-button_is-active\");\n  }\n  \n  buttonLike.addEventListener(\"click\", (evt) => likeCard(evt, cardData._id, likeCounter));\n\n  // Обработка открытия попапа с изображением\n  cardImage.addEventListener(\"click\", handlerOpenPopupImage);\n\n  return cardElement;\n}\n","const showInputError = (formElement, inputElement, errorMessage, inputErrorClass) => {\n  const errorElement = formElement.querySelector(`.input_${inputElement.name}-error`);\n  inputElement.classList.add(inputErrorClass);\n  errorElement.textContent = errorMessage;\n};\n\nconst hideInputError = (formElement, inputElement, inputErrorClass) => {\n  const errorElement = formElement.querySelector(`.input_${inputElement.name}-error`);\n  inputElement.classList.remove(inputErrorClass);\n  errorElement.textContent = \"\";\n};\n\nexport function checkInputValidity(formElement, inputElement, inputErrorClass) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage || \"\");\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n\n  if (inputElement.validity.valid) {\n    hideInputError(formElement, inputElement, inputErrorClass);\n  } else {\n    showInputError(formElement, inputElement, inputElement.validationMessage, inputErrorClass);\n  }\n}\n\nconst hasInvalidInput = (inputList) => inputList.some(input => !input.validity.valid);\n\nexport function enableValidation({ inputListFormProfile, buttonSubmit, formSelector, inputErrorClass, inactiveButtonClass }) {\n  toggleButtonState(inputListFormProfile, buttonSubmit, inactiveButtonClass);\n\n  inputListFormProfile.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", () => {\n      checkInputValidity(formSelector, inputElement, inputErrorClass);\n      toggleButtonState(inputListFormProfile, buttonSubmit, inactiveButtonClass);\n    });\n  });\n}\n\nexport function clearValidation(formElement, inputListFormProfile, buttonSubmit) {\n  toggleButtonState(inputListFormProfile, buttonSubmit);\n\n  inputListFormProfile.forEach((inputElement) => {\n    hideInputError(formElement, inputElement);\n    inputElement.removeEventListener(\"input\", () => {\n      checkInputValidity(formElement, inputElement);\n      toggleButtonState(inputListFormProfile, buttonSubmit);\n    });\n  });\n}\n\nexport const toggleButtonState = (inputList, buttonSubmit, inactiveButtonClass = \"popup__button_disabled\") => {\n  if (hasInvalidInput(inputList)) {\n    buttonSubmit.classList.add(inactiveButtonClass);\n    buttonSubmit.disabled = true;\n  } else {\n    buttonSubmit.classList.remove(inactiveButtonClass);\n    buttonSubmit.disabled = false;\n  }\n};\n","import \"./pages/index.css\";\nimport { makeCard, likeCard, launchDeleteCard } from \"./components/card.js\";\nimport { openModal, closeModal } from \"./components/modal.js\";\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\nimport {\n  getUserInfo,\n  getCards,\n  updateUserServerInfo,\n  createNewPost,\n  changeAvatar,\n} from \"./components/api.js\";\n\n// Объявление переменных:\nconst validationLink = /http.*(jpeg|jpg|gif|png)/gi;\n\nconst placesList = document.querySelector(\".places__list\");\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst buttonEdit = document.querySelector(\".profile__edit-button\");\nconst buttonAdd = document.querySelector(\".profile__add-button\");\nconst profileImage = document.querySelector(\".profile__image\");\n\nconst popupEdit = document.querySelector(\".popup_type_edit\");\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\nconst popupImage = document.querySelector(\".popup_type_image\");\nconst popupNewAvatar = document.querySelector(\".popup_type_edit_avatar\");\nconst selectedPopupImage = popupImage.querySelector(\".popup__image\");\nconst popupCaption = popupImage.querySelector(\".popup__caption\");\n\nconst formElementEditProfile = popupEdit.querySelector(\".popup__form[name='edit-profile']\");\nconst formElementNewPlace = popupNewCard.querySelector(\".popup__form[name='new-place']\");\nconst formElementEditAvatar = popupNewAvatar.querySelector(\".popup__form[name='edit-avatar']\");\n\nconst inputListFormProfile = Array.from(formElementEditProfile.querySelectorAll(\".popup__input\"));\nconst inputListFormAddCard = Array.from(formElementNewPlace.querySelectorAll(\".popup__input\"));\nconst inputListFormEditAvatar = Array.from(formElementEditAvatar.querySelectorAll(\".popup__input\"));\n\nconst nameProfileInput = formElementEditProfile.querySelector(\".popup__input_type_name\");\nconst jobInput = formElementEditProfile.querySelector(\".popup__input_type_description\");\nconst nameNewCardInput = formElementNewPlace.querySelector(\".popup__input_type_card-name\");\nconst urlInput = formElementNewPlace.querySelector(\".popup__input_type_url\");\n\nconst buttonPopupEditProfileSubmit = formElementEditProfile.querySelector(\".popup__button\");\nconst buttonPopupAddCardSubmit = formElementNewPlace.querySelector(\".popup__button\");\nconst buttonPopupNewAvatarSubmit = formElementEditAvatar.querySelector(\".popup__button\");\n\n// Здесь добавлено определение formList\nconst formList = Array.from(document.querySelectorAll(\".popup__form\"));\n\n// Основные функции:\nfunction addCard(data) {\n  return makeCard(data, launchDeleteCard, likeCard, handlerOpenPopupImage);\n}\n\nfunction updateUserInfo(data) {\n  profileTitle.textContent = data.name;\n  profileDescription.textContent = data.about;\n  profileImage.style.backgroundImage = `url(${data.avatar})`;\n}\n\nfunction renderInitialCards(cards, userInfo) {\n  cards.forEach((card) => {\n    if (validationLink.test(card.link)) {\n      const readyCard = addCard({ informationCard: card, informationMe: userInfo });\n      placesList.append(readyCard);\n    }\n  });\n}\n\nfunction loadInitialInfo() {\n  Promise.all([getUserInfo(), getCards()])\n    .then(([userInfo, cards]) => {\n      window.dataUserInfo = userInfo;\n      updateUserInfo(userInfo);\n      renderInitialCards(cards, userInfo);\n    })\n    .catch(console.log);\n}\n\nfunction renderNewCard(cardData) {\n  const readyCard = addCard({ informationCard: cardData, informationMe: dataUserInfo });\n  placesList.prepend(readyCard);\n}\n\nfunction handlerOpenPopupImage(evt) {\n  selectedPopupImage.src = evt.target.src;\n  selectedPopupImage.alt = evt.target.alt;\n  popupCaption.textContent = evt.target.alt;\n  openModal(popupImage);\n}\n\nfunction handleFormSubmit(button, apiFunction, onSuccess, onError) {\n  return (evt) => {\n    evt.preventDefault();\n    button.textContent = \"Сохранение...\";\n    apiFunction()\n      .then(onSuccess)\n      .catch(onError)\n      .finally(() => {\n        button.textContent = \"Сохранить\";\n      });\n  };\n}\n\nbuttonEdit.addEventListener(\"click\", () => {\n  nameProfileInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  openModal(popupEdit);\n  clearValidation(formElementEditProfile, inputListFormProfile, buttonPopupEditProfileSubmit);\n});\n\nbuttonAdd.addEventListener(\"click\", () => {\n  formElementNewPlace.reset();\n  clearValidation(formElementNewPlace, inputListFormAddCard, buttonPopupAddCardSubmit);\n  openModal(popupNewCard);\n});\n\nprofileImage.addEventListener(\"click\", () => {\n  clearValidation(formElementEditAvatar, inputListFormEditAvatar, buttonPopupNewAvatarSubmit);\n  openModal(popupNewAvatar);\n});\n\ndocument.querySelectorAll(\".popup__close\").forEach((closeButton) => {\n  closeButton.addEventListener(\"click\", (evt) => closeModal(evt.target.closest(\".popup\")));\n});\n\nformElementEditProfile.addEventListener(\"submit\", handleFormSubmit(\n  buttonPopupEditProfileSubmit,\n  () => updateUserServerInfo({ name: nameProfileInput.value, job: jobInput.value }),\n  (res) => {\n    profileTitle.textContent = res.name;\n    profileDescription.textContent = res.about;\n    closeModal(popupEdit);\n  },\n  console.log\n));\n\nformElementNewPlace.addEventListener(\"submit\", handleFormSubmit(\n  buttonPopupAddCardSubmit,\n  () => createNewPost({ dataCard: { name: nameNewCardInput.value, link: urlInput.value, likes: [] } }),\n  (res) => {\n    renderNewCard(res);\n    closeModal(popupNewCard);\n  },\n  console.log\n));\n\nformElementEditAvatar.addEventListener(\"submit\", handleFormSubmit(\n  buttonPopupNewAvatarSubmit,\n  () => changeAvatar(formElementEditAvatar.querySelector(\".popup__input_type_url\").value),\n  (link) => {\n    profileImage.style.backgroundImage = `url(${link.avatar})`;\n    closeModal(popupNewAvatar);\n  },\n  console.log\n));\n\nformList.forEach((formElement) => {\n  enableValidation({\n    formSelector: formElement,\n    inputListFormProfile: Array.from(formElement.querySelectorAll(\".popup__input\")),\n    buttonSubmit: formElement.querySelector(\".popup__button\"),\n    inactiveButtonClass: \"popup__button_disabled\",\n    inputErrorClass: \"popup__input_type_error\",\n    errorClass: \"popup__error_visible\",\n  });\n});\n\nloadInitialInfo();\n"],"names":["openModal","popup","classList","add","document","addEventListener","pressEscapeClose","clickOutsideClose","closeModal","remove","removeEventListener","evt","target","currentTarget","closest","key","selectedPopup","querySelector","config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","request","endpoint","options","fetch","_objectSpread","then","deleteCard","cardId","method","addLike","removeLike","cardTemplate","content","popupDelete","buttonPopupDelete","launchDeleteCard","event","selectedCard","handleDelete","textContent","catch","err","console","error","finally","once","showInputError","formElement","inputElement","errorMessage","inputErrorClass","errorElement","name","hideInputError","checkInputValidity","validity","patternMismatch","setCustomValidity","dataset","valid","validationMessage","clearValidation","inputListFormProfile","buttonSubmit","toggleButtonState","forEach","inputList","inactiveButtonClass","arguments","length","undefined","some","input","hasInvalidInput","disabled","validationLink","placesList","profileTitle","profileDescription","buttonEdit","buttonAdd","profileImage","popupEdit","popupNewCard","popupImage","popupNewAvatar","formElementEditProfile","formElementNewPlace","formElementEditAvatar","Array","from","querySelectorAll","inputListFormAddCard","inputListFormEditAvatar","nameProfileInput","jobInput","nameNewCardInput","urlInput","buttonPopupEditProfileSubmit","buttonPopupAddCardSubmit","buttonPopupNewAvatarSubmit","formList","addCard","data","handlerOpenPopupImage","cardData","informationCard","userInfo","informationMe","cardElement","cloneNode","buttonLike","cardImage","likeCounter","buttonRemove","likes","src","link","alt","owner","_id","like","likeButton","contains","toggle","likeCard","makeCard","handleFormSubmit","button","apiFunction","onSuccess","onError","preventDefault","value","reset","closeButton","job","body","JSON","stringify","about","log","dataCard","readyCard","dataUserInfo","prepend","linkImg","avatar","style","backgroundImage","_ref","formSelector","enableValidation","errorClass","all","_ref2","cards","window","card","test","append","renderInitialCards"],"sourceRoot":""}