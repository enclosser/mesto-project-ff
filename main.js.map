{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project/./src/components/modal.js","webpack://mesto-project/./src/components/api.js","webpack://mesto-project/./src/components/card.js","webpack://mesto-project/./src/components/validation.js","webpack://mesto-project/./src/index.js"],"sourcesContent":["export function openModal(popup) {\n  popup.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", pressEscapeClose);\n  popup.addEventListener(\"click\", clickOutsideClose);\n}\n\nexport function closeModal(popup) {\n  popup.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", pressEscapeClose);\n  popup.removeEventListener(\"click\", clickOutsideClose);\n}\n\nfunction clickOutsideClose(evt) {\n  if (!evt.target.closest(\".popup__content\")) {\n    evt.preventDefault();\n    const popup = document.querySelector(\".popup_is-opened\");\n    closeModal(popup);\n  }\n}\n\nfunction pressEscapeClose(evt) {\n  if (evt.key === \"Escape\") {\n    evt.preventDefault();\n    const selectedPopup = document.querySelector(\".popup_is-opened\");\n    closeModal(selectedPopup);\n  }\n}\n","const config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-21\",\n  headers: {\n    authorization: \"ba726ca4-babe-4c60-b803-4ec06cee7921\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nfunction checkResponse(res) {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n}\n\nfunction request(endpoint, options) {\n  return fetch(`${config.baseUrl}${endpoint}`, {\n    headers: config.headers,\n    ...options,\n  }).then(checkResponse);\n}\n\nexport const getUserInfo = request(\"/users/me\", { method: \"GET\" });\n\nexport const getCards = request(\"/cards\", { method: \"GET\" });\n\nexport const updateUserServerInfo = (data) =>\n  request(\"/users/me\", {\n    method: \"PATCH\",\n    body: JSON.stringify({\n      name: data.name,\n      about: data.job,\n    }),\n  });\n\nexport const createNewPost = (data) =>\n  request(\"/cards\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      link: data.dataCard.link,\n      name: data.dataCard.name,\n    }),\n  });\n\nexport const deleteCard = (cardId) =>\n  request(`/cards/${cardId}`, { method: \"DELETE\" });\n\nexport const addLike = (cardId) =>\n  request(`/cards/likes/${cardId}`, { method: \"PUT\" });\n\nexport const removeLike = (cardId) =>\n  request(`/cards/likes/${cardId}`, { method: \"DELETE\" });\n\nexport const changeAvatar = (linkImg) =>\n  request(\"/users/me/avatar\", {\n    method: \"PATCH\",\n    body: JSON.stringify({ avatar: linkImg }),\n  });\n","import { openModal, closeModal } from \"./modal.js\";\nimport { deleteCard, addLike, removeLike } from \"./api.js\";\nexport const cardTemplate = document.querySelector(\"#card-template\").content;\n\nconst popupDelete = document.querySelector(\".delete__popup\");\nconst buttonPopupDelete = popupDelete.querySelector(\".popup__button\");\n\nexport function launchDeleteCard(event, cardId) {\n  const selectedCard = event.target.closest(\".card\");\n  openModal(popupDelete);\n  buttonPopupDelete.addEventListener(\"click\", (evt) => {\n    buttonPopupDelete.textContent = \"Удаление...\";\n    deleteCard(cardId._id)\n      .then((res) => {\n        selectedCard.remove();\n        closeModal(popupDelete);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally((res) => {\n        buttonPopupDelete.textContent = \"Да\";\n      });\n  });\n}\n\nexport function likeCard(event, data, likeCounter) {\n  if (!event.target.classList.contains(\"card__like-button_is-active\")) {\n    addLike(data.informationCard._id)\n      .then((res) => {\n        likeCounter.textContent = \"\" + res.likes.length;\n        event.target.classList.toggle(\"card__like-button_is-active\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  } else {\n    removeLike(data.informationCard._id)\n      .then((res) => {\n        likeCounter.textContent = \"\" + res.likes.length;\n        event.target.classList.toggle(\"card__like-button_is-active\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n\nexport function makeCard(\n  data,\n  launchDeleteCard,\n  likeCard,\n  handlerOpenPopupImage\n) {\n  const cardData = data.informationCard;\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\n  const buttonLike = cardElement.querySelector(\".card__like-button\");\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const likeCounter = cardElement.querySelector(\".like__counter\");\n  const contentForCounter = \"\" + cardData.likes.length;\n  likeCounter.textContent = contentForCounter;\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  cardElement.querySelector(\".card__title\").textContent = cardData.name;\n  const buttonRemove = cardElement.querySelector(\".card__delete-button\");\n  if (cardData.owner._id === data.informationMe._id) {\n    buttonRemove.addEventListener(\"click\", (evt) => {\n      launchDeleteCard(evt, cardData);\n    });\n  } else {\n    buttonRemove.remove();\n  }\n  cardData.likes.forEach((arrayLike) => {\n    if (arrayLike._id === data.informationMe._id) {\n      buttonLike.classList.add(\"card__like-button_is-active\");\n    }\n  });\n  buttonLike.addEventListener(\"click\", (evt) => {\n    likeCard(evt, data, likeCounter);\n  });\n  cardImage.addEventListener(\"click\", (evt) => {\n    handlerOpenPopupImage(evt);\n  });\n  return cardElement;\n}\n","const showInputError = (\n  formElement,\n  inputElement,\n  errorMessage,\n  inputErrorClass\n) => {\n  const errorElement = formElement.querySelector(\n    `.input_${inputElement.name}-error`\n  );\n  inputElement.classList.add(inputErrorClass);\n  errorElement.textContent = errorMessage;\n};\n\nconst hideInputError = (formElement, inputElement, inputErrorClass) => {\n  const errorElement = formElement.querySelector(\n    `.input_${inputElement.name}-error`\n  );\n  errorElement.textContent = \"\";\n  inputElement.classList.remove(inputErrorClass);\n};\n\nexport function checkInputValidity(\n  formSelector,\n  inputSelector,\n  inputErrorClass\n) {\n  if (inputSelector.validity.patternMismatch) {\n    inputSelector.setCustomValidity(inputSelector.dataset.errorMessage);\n  } else {\n    inputSelector.setCustomValidity(\"\");\n  }\n  if (inputSelector.validity.valid) {\n    hideInputError(formSelector, inputSelector, inputErrorClass);\n  } else {\n    showInputError(\n      formSelector,\n      inputSelector,\n      inputSelector.validationMessage,\n      inputErrorClass\n    );\n  }\n}\n\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((evt) => {\n    return !evt.validity.valid;\n  });\n};\n\nexport function enableValidation(data) {\n  toggleButtonState(\n    data.inputListFormProfile,\n    data.buttonSubmit,\n    data.inactiveButtonClass\n  );\n  data.inputListFormProfile.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", (evt) => {\n      checkInputValidity(data.formSelector, inputElement, data.inputErrorClass);\n      toggleButtonState(\n        data.inputListFormProfile,\n        data.buttonSubmit,\n        data.inactiveButtonClass\n      );\n    });\n  });\n}\n\nexport function clearValidation(\n  formElement,\n  inputListFormProfile,\n  buttonSubmit\n) {\n  toggleButtonState(inputListFormProfile, buttonSubmit);\n  inputListFormProfile.forEach((inputElement) => {\n    hideInputError(formElement, inputElement);\n    inputElement.removeEventListener(\"input\", (evt) => {\n      checkInputValidity(formElement, inputElement);\n      toggleButtonState(inputListFormProfile, buttonSubmit);\n    });\n  });\n}\n\nexport const toggleButtonState = (\n  inputList,\n  ButtonPopupSubmit,\n  inactiveButtonClass = \"popup__button_disabled\"\n) => {\n  if (hasInvalidInput(inputList)) {\n    ButtonPopupSubmit.setAttribute(\"disabled\", \"\");\n    ButtonPopupSubmit.classList.add(\"\" + inactiveButtonClass);\n  } else {\n    ButtonPopupSubmit.classList.remove(\"\" + inactiveButtonClass);\n    ButtonPopupSubmit.removeAttribute(\"disabled\", \"\");\n  }\n};\n","import \"./pages/index.css\";\nimport { makeCard, likeCard, launchDeleteCard } from \"./components/card.js\";\nimport { openModal, closeModal } from \"./components/modal.js\";\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\nimport {\n  getUserInfo,\n  getCards,\n  updateUserServerInfo,\n  createNewPost,\n  changeAvatar,\n} from \"./components/api.js\";\n// Обьявление переменных:\nconst validationLink = /http.*(jpeg|jpg|gif|png)/gi;\n\nconst placesList = document.querySelector(\".places__list\");\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst buttonEdit = document.querySelector(\".profile__edit-button\");\nconst buttonAdd = document.querySelector(\".profile__add-button\");\nconst profileImage = document.querySelector(\".profile__image\");\n//const profileImage = document.querySelector(\".profile_edit_blackout\");\n//Модальные окна:\nconst popupEdit = document.querySelector(\".popup_type_edit\");\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\nconst popupImage = document.querySelector(\".popup_type_image\");\nconst popupNewAvatar = document.querySelector(\".popup_type_edit_avatar\");\nconst buttonPopupsClose = document.querySelectorAll(\".popup__close\");\nconst selectedPopupImage = popupImage.querySelector(\".popup__image\");\nconst popupCaption = popupImage.querySelector(\".popup__caption\");\n\n//Элементы формы:\nconst formElementEditProfile = popupEdit.querySelector(\n  \".popup__form[name='edit-profile']\"\n);\nconst formElementNewPlace = popupNewCard.querySelector(\n  \".popup__form[name='new-place']\"\n);\nconst formElementEditAvatar = popupNewAvatar.querySelector(\n  \".popup__form[name='edit-avatar']\"\n);\n\nconst formList = Array.from(document.querySelectorAll(\".popup__form\"));\n\nconst inputListFormProfile = Array.from(\n  formElementEditProfile.querySelectorAll(\".popup__input\")\n);\n\nconst inputListFormAddCard = Array.from(\n  formElementNewPlace.querySelectorAll(\".popup__input\")\n);\n\nconst inputListFormEditAvatar = Array.from(\n  formElementEditAvatar.querySelectorAll(\".popup__input\")\n);\n\nconst nameProfileInput = formElementEditProfile.querySelector(\n  \".popup__input_type_name\"\n);\nconst jobInput = formElementEditProfile.querySelector(\n  \".popup__input_type_description\"\n);\n\nconst nameNewCardInput = formElementNewPlace.querySelector(\n  \".popup__input_type_card-name\"\n);\nconst urlInput = formElementNewPlace.querySelector(\".popup__input_type_url\");\n\nconst buttonPopupEditPtofileSubmit =\n  formElementEditProfile.querySelector(\".popup__button\");\n\nconst buttonPopupAddCardSubmit =\n  formElementNewPlace.querySelector(\".popup__button\");\n\nconst buttonPopupNewAvatarSubmit =\n  formElementEditAvatar.querySelector(\".popup__button\");\n\nconst dataForCards = [getUserInfo, getCards];\n\nfunction addCard(data) {\n  return makeCard(data, launchDeleteCard, likeCard, handlerOpenPopupImage);\n}\n\nfunction updateUserInfo(data) {\n  profileTitle.textContent = data.name;\n  profileDescription.textContent = data.about;\n  profileImage.setAttribute(\"style\", `background-image: url(${data.avatar})`);\n}\n\nfunction renderInitialCards(data) {\n  data.forEach((dataCard) => {\n    if (!validationLink.test(dataCard.link)) {\n    } else {\n      const readyCard = addCard({\n        informationCard: dataCard,\n        informationMe: dataUserInfo,\n      });\n      placesList.append(readyCard);\n    }\n  });\n}\n\nfunction loadInitialInfo() {\n  Promise.all(dataForCards)\n    .then((data) => {\n      window.dataUserInfo = data[0];\n      updateUserInfo(dataUserInfo);\n      renderInitialCards(data[1]);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nexport function renderNewCard(dataNewCard) {\n  const dataCard = dataNewCard;\n  const readyCard = addCard({\n    informationCard: dataCard,\n    informationMe: dataUserInfo,\n  });\n  placesList.prepend(readyCard);\n}\n\nfunction handlerOpenPopupImage(evt) {\n  selectedPopupImage.src = evt.target.src;\n  selectedPopupImage.alt = evt.target.alt;\n  popupCaption.textContent = evt.target.alt;\n  openModal(popupImage);\n}\n\nfunction handlerFormEditProfile(evt, formElement) {\n  evt.preventDefault();\n  buttonPopupEditPtofileSubmit.textContent = \"Сохранение...\";\n  updateUserServerInfo({ name: nameProfileInput.value, job: jobInput.value })\n    .then((res) => {\n      profileTitle.textContent = res.name;\n      profileDescription.textContent = res.about;\n      closeModal(popupEdit);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally((res) => {\n      buttonPopupEditPtofileSubmit.textContent = \"Сохранить\";\n    });\n}\n\nfunction handlerFormNewCard(evt, closeModal, formElement) {\n  buttonPopupAddCardSubmit.textContent = \"Сохранение...\";\n  evt.preventDefault();\n  const newCards = {\n    name: nameNewCardInput.value,\n    link: urlInput.value,\n    likes: [],\n  };\n  createNewPost({ dataCard: newCards })\n    .then((res) => {\n      renderNewCard(res);\n      closeModal(popupNewCard);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally((evt) => {\n      buttonPopupAddCardSubmit.textContent = \"Создать\";\n    });\n}\n\nfunction handlerEditAvatar(evt, formElementEditAvatar) {\n  evt.preventDefault();\n  buttonPopupNewAvatarSubmit.textContent = \"Сохранение...\";\n  const linkImg = formElementEditAvatar.querySelector(\".popup__input_type_url\");\n  changeAvatar(linkImg.value)\n    .then((link) => {\n      profileImage.setAttribute(\n        \"style\",\n        `background-image: url(${link.avatar})`\n      );\n      linkImg.value = \"\";\n      closeModal(popupNewAvatar);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally((res) => {\n      buttonPopupNewAvatarSubmit.textContent = \"Сохранить\";\n    });\n}\n\n//Открытие попапов:\n\nbuttonEdit.addEventListener(\"click\", (evt) => {\n  nameProfileInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  openModal(popupEdit);\n  clearValidation(\n    formElementEditProfile,\n    inputListFormProfile,\n    buttonPopupEditPtofileSubmit,\n    \"popup__button_disabled\"\n  );\n});\n\nbuttonAdd.addEventListener(\"click\", (evt) => {\n  formElementNewPlace.reset();\n  clearValidation(\n    formElementNewPlace,\n    inputListFormAddCard,\n    buttonPopupAddCardSubmit\n  );\n  openModal(popupNewCard);\n});\n\nprofileImage.addEventListener(\"click\", (evt) => {\n  clearValidation(\n    formElementEditAvatar,\n    inputListFormEditAvatar,\n    buttonPopupNewAvatarSubmit\n  );\n  openModal(popupNewAvatar);\n});\n\n//Закрытие попапов:\n\nbuttonPopupsClose.forEach((evt) => {\n  evt.addEventListener(\"click\", (evt) => {\n    closeModal(evt.target.closest(\".popup\"));\n  });\n});\n\n//Отправка данных:\n\nformElementEditProfile.addEventListener(\"submit\", (evt) => {\n  handlerFormEditProfile(evt, formElementEditProfile);\n});\n\nformElementNewPlace.addEventListener(\"submit\", (evt) => {\n  handlerFormNewCard(evt, closeModal, formElementNewPlace);\n});\n\nformElementEditAvatar.addEventListener(\"submit\", (evt) => {\n  handlerEditAvatar(evt, formElementEditAvatar);\n});\n//Валидация:\n\nformList.forEach((formElement) => {\n  enableValidation({\n    formSelector: formElement,\n    inputListFormProfile: Array.from(\n      formElement.querySelectorAll(\".popup__input\")\n    ),\n    buttonSubmit: formElement.querySelector(\".popup__button\"),\n    inactiveButtonClass: \"popup__button_disabled\",\n    inputErrorClass: \"popup__input_type_error\",\n    errorClass: \"popup__error_visible\",\n  });\n});\n\n//Добавление карточек и работа с сервером:\n\nloadInitialInfo();\n"],"names":["openModal","popup","classList","add","document","addEventListener","pressEscapeClose","clickOutsideClose","closeModal","remove","removeEventListener","evt","target","closest","preventDefault","querySelector","key","config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","request","endpoint","options","fetch","_objectSpread","then","getUserInfo","method","getCards","deleteCard","cardId","addLike","removeLike","cardTemplate","content","popupDelete","buttonPopupDelete","launchDeleteCard","event","selectedCard","textContent","_id","catch","err","console","log","finally","likeCard","data","likeCounter","contains","informationCard","likes","length","toggle","showInputError","formElement","inputElement","errorMessage","inputErrorClass","errorElement","name","hideInputError","checkInputValidity","formSelector","inputSelector","validity","patternMismatch","setCustomValidity","dataset","valid","validationMessage","clearValidation","inputListFormProfile","buttonSubmit","toggleButtonState","forEach","inputList","ButtonPopupSubmit","inactiveButtonClass","arguments","undefined","some","hasInvalidInput","removeAttribute","setAttribute","validationLink","placesList","profileTitle","profileDescription","buttonEdit","buttonAdd","profileImage","popupEdit","popupNewCard","popupImage","popupNewAvatar","buttonPopupsClose","querySelectorAll","selectedPopupImage","popupCaption","formElementEditProfile","formElementNewPlace","formElementEditAvatar","formList","Array","from","inputListFormAddCard","inputListFormEditAvatar","nameProfileInput","jobInput","nameNewCardInput","urlInput","buttonPopupEditPtofileSubmit","buttonPopupAddCardSubmit","buttonPopupNewAvatarSubmit","dataForCards","addCard","handlerOpenPopupImage","cardData","cardElement","cloneNode","buttonLike","cardImage","contentForCounter","src","link","alt","buttonRemove","owner","informationMe","arrayLike","makeCard","value","reset","job","body","JSON","stringify","about","handlerFormEditProfile","dataCard","readyCard","dataUserInfo","prepend","handlerFormNewCard","linkImg","avatar","changeAvatar","handlerEditAvatar","errorClass","all","window","updateUserInfo","test","append","renderInitialCards"],"sourceRoot":""}